varwith=TRUE)
boxplot(mpg~cyl, notch=TRUE,
varwith=TRUE)
boxplot(mpg~cyl, notch=TRUE,
varwith=TRUE)
boxplot(mpg~cyl, notch=TRUE,
varwith=TRUE,
col="red")
boxplot(mpg~cyl, notch=TRUE,
col="red")
boxplot(mpg~cyl, notch=TRUE,
col="red")
?boxplot
boxplot(mpg~cyl, notch=TRUE,
varwidth=TRUE,
col="red")
?boxplot
mtcars$cyl.f <- factor(mtcars$cyl, levels = c(4,6, 8), labels=c("4","6","8"))
mtcars$am.f<- factor(mtcars$am, levels=c(0, 1), lables=c("auto", "standard"))
mtcars$am.f<- factor(mtcars$am, levels=c(0, 1), labels=c("auto", "standard"))
boxplot(mpg~am.f*cy.f)
cyl.f <- factor(mtcars$cyl, levels = c(4,6, 8), labels=c("4","6","8"))
am.f<- factor(mtcars$am, levels=c(0, 1), labels=c("auto", "standard"))
boxplot(mpg~am.f*cy.f)
boxplot(mpg~am.f*cly.f)
boxplot(mpg~am.f*cly.f)
boxplot(mpg~cyl, notch=TRUE,
varwidth=TRUE,
col="red")
boxplot(mpg~am.f*cly.f)
boxplot(mpg~am.f*cyl.f)
boxplot(mpg~am.f*cyl.f, data=mtcars)
boxplot(mpg~am.f*cyl.f, data=mtcars, varwidth=T,
col=c("gold", "darkgreen"))
boxplot(mpg~am.f*cyl.f, data=mtcars, varwidth=T,
col=c("gold", "darkgreen", "red"))
boxplot(mpg~am.f*cyl.f, data=mtcars, varwidth=T,
col=c("gold", "darkgreen"))
boxplot(mpg~am.f*cyl.f, data=mtcars, varwidth=T,
col=c("gold", "darkgreen"))
vioplot(x1, x2, x3, names=c("4 cyl", "6 cyl", "8 cyl"), col="gold")
library(vioplot)
vioplot(x1, x2, x3, names=c("4 cyl", "6 cyl", "8 cyl"), col="gold")
x1<-mtcars$mpg[mtcars$cyl == 4]
x2<-mtcars$mpg[mtcars$cyl == 6]
x3<-mtcars$mpg[mtcars$cyl == 8]
vioplot(x1, x2, x3, names=c("4 cyl", "6 cyl", "8 cyl"), col="gold")
dotchart(mtcars$mpg)
dotchart(mtcars$mpg,  labels = row.names(mtcars))
dotchart(mtcars$mpg,  labels = row.names(mtcars), cex=0.7)
x<-mtcars[order(mtcars$mpg)]
x<-mtcars[order(mtcars$mpg),]
x$color[x$cyl = 4] <- "red"
x$color[x$cyl = 6] <- "blue"
x$color[x$cyl = 8] <- "darkgreen"
x<-mtcars[order(mtcars$mpg),]
x$color[x$cyl = 4] <- "red"
x$color[x$cyl = 6] <- "blue"
x$color[x$cyl = 8] <- "darkgreen"
x$color[x$cyl == 4] <- "red"
x$color[x$cyl == 6] <- "blue"
x$color[x$cyl == 8] <- "darkgreen"
dotchar(x)
dotchart(x)
x<-mtcars[order(mtcars$mpg),]
x$color[x$cyl == 4] <- "red"
x$color[x$cyl == 6] <- "blue"
x$color[x$cyl == 8] <- "darkgreen"
dotchart(x$mpg)
dotchart(x$mpg, color = x$color)
dotchart(x$mpg, color = x$color)
dotchart(x$mpg, color = x$color, groups = x%cyl)
dotchart(x$mpg, color = x$color, groups = x$cyl)
dotchart(x$mpg, color = x$color, groups = x$cyl, labels = row.names(x))
dotchart(x$mpg, color = x$color, groups = x$cyl, labels = row.names(x),
cex=0.7)
dotchart(x$mpg, color = x$color, groups = x$cyl, labels = row.names(x),
cex=0.7, pch=19)
dotchart(x$mpg, color = x$color, groups = x$cyl, labels = row.names(x),
cex=0.7, pch=19,xlim = 100)
dotchart(x$mpg, color = x$color, groups = x$cyl, labels = row.names(x),
cex=0.7, pch=19,xlim = 1)
dotchart(x$mpg, color = x$color, groups = x$cyl, labels = row.names(x),
cex=0.7, pch=19,xlim = 0.1)
dotchart(x$mpg, color = x$color, groups = x$cyl, labels = row.names(x),
cex=0.7, pch=19, xlim = 30)
dotchart(x$mpg, color = x$color, groups = x$cyl, labels = row.names(x),
cex=0.7, pch=19)
par <- par(no.readonly = T)
par(mfrow = c(1,1))
barplot(counts, main='Simple Bar Plot', xlab="Improved", ylab = "Frequence")
barplot(counts, main='Simple Bar Plot', ylab="Improved", xlab = "Frequence", horiz = T)
counts<-table(Arthritis$Improved, Arthritis$Treatment)
plot(Arthritis$Improved)
barplot(counts, main="Stacked Bar Plot", col=c("red", "yellow", "green"), legend = rownames(counts))
barplot(counts, main="Grouped Bar Plot", col=c("red", "yellow", "green"), legend = rownames(counts), beside = T)
states<-data.frame(state.region, state.x77)
means <- aggregate(states$Illiteracy, by=list(state.region), FUN=mean)
means <- mains[order(means$x),]
barplot(means$x, names.arg = means$Group.1)
title("Mean Illiteracy Rate")
par(mar = c(5, 8, 4, 2))
par(las=2)
barplot(means$x, names.arg = means$Group.1, cex.names = 0.8, horiz = T)
title("Mean Illiteracy Rate")
opar <- par(no.readonly = T)
par(mfrow = c(1,1))
barplot(counts, main='Simple Bar Plot', xlab="Improved", ylab = "Frequence")
barplot(counts, main='Simple Bar Plot', ylab="Improved", xlab = "Frequence", horiz = T)
counts<-table(Arthritis$Improved, Arthritis$Treatment)
plot(Arthritis$Improved)
library('vcd')
library('Hmisc')
counts<-table(Arthritis$Improved, Arthritis$Treatment)
plot(Arthritis$Improved)
barplot(counts, main="Stacked Bar Plot", col=c("red", "yellow", "green"), legend = rownames(counts))
barplot(counts, main="Grouped Bar Plot", col=c("red", "yellow", "green"), legend = rownames(counts), beside = T)
barplot(counts, main='Simple Bar Plot', xlab="Improved", ylab = "Frequence")
counts
means <- aggregate(states$Illiteracy, by=list(state.region), FUN=mean)
means <- mains[order(means$x),]
barplot(means$x, names.arg = means$Group.1)
mains
means <- aggregate(states$Illiteracy, by=list(state.region), FUN=mean)
means <- means[order(means$x),]
barplot(means$x, names.arg = means$Group.1)
title("Mean Illiteracy Rate")
dose<-c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
plot(dose, drugA, type='b')
opar <- par(no.readonly = T)
par(lty = 2, pch = 17)
plot(dose, drugA, type = "b")
par(opar)
plot(dose, drugA, type="b", lty = 3, lwd = 3, pch = 15, cex = 3)
colors()
n<- 10
mycolors <- rainbow(n)
pie(rep(1, n), labels=mycolors, col=mycolors)
mygreys <- grey(0:n /n)
pie(rep(1, n), labels=mygreys, col=mygreys)
opar<-par(no.readonly = T)
par(mfrow=c(1, 2))
par(pin=c(2, 3))
par(lwd=2, cex=1.5)
par(cex.axis = .75, font.axis=3)
plot(dose, drugA, type = 'b', pch=19, lty=2, col="red")
plot(dose, drugB, type = 'b', pch=23, lty=6, col="blue", bg="green")
par(opar)
library(Hmisc)
x<-c(1:10)
y<-x
z<-10/x
opar<-par(no.readonly = T)
par(mar = c(5,4,3,8) + 0.1)
plot(x, y , type="b", pch=21, col="red", yaxt="n",lty=3, ann=FALSE)
lines(x, z, type="b", pch=22, col="blue", lty = 2)
axis(2, at=y, labels=y, col.axis="red", las=2)
axis(4, at=z, labels=round(z, digits = 2), col.axis="blue", las = 2,
cex.axis= 0.75, tck = -0.01)
mtext("z=10/x", side=4, line=3, cex.lab=1, las=2, col="blue")
title("An example of Creative Axes", xlab = "x values", ylab="y=x")
minor.tick(nx=3, ny=1, tick.ratio = 0.5)
par(opar)
opar<- par(no.readonly = T)
opar<-par(no.readonly = T)
par(mar = c(5,4,3,8) + 0.1)
plot(x, y , type="b", pch=21, col="red", yaxt="n",lty=3, ann=FALSE)
lines(x, z, type="b", pch=22, col="blue", lty = 2)
axis(2, at=y, labels=y, col.axis="red", las=2)
axis(4, at=z, labels=round(z, digits = 2), col.axis="blue", las = 2,
cex.axis= 0.75, tck = -0.01)
axis(4, at=z, labels=round(z, digits = 2), col.axis="blue", las = 1,
cex.axis= 0.75, tck = -0.01)
axis(4, at=z, labels=round(z, digits = 2), col.axis="blue", las = 2,
cex.axis= 0.75, tck = -0.01)
mtext("z=10/x", side=4, line=3, cex.lab=1, las=2, col="blue")
title("An example of Creative Axes", xlab = "x values", ylab="y=x")
minor.tick(nx=3, ny=1, tick.ratio = 0.5)
par(opar)
opar<- par(no.readonly = T)
par(lwd=2, cex=1.5, font.lab=2)
plot(dose, drugA, type="b", pch=15, lty=1, col="red", ylim=c(0, 60))
lines(dose, drugB, type="b", pch=17, lty=2, col="blue")
abline(h=c(30), lwd=1.5, lty=2, col="blue")
minor.tick(nx=3, ny=3, tick.ratio = 0.5)
legend("topleft", inset = 0.05, title="Drug Type",
c("A", "B"), lty = c(1,2), pch=c(15, 17),
col=c("red", "blue"), cex=0.5)
par(opar)
attach(mtcars)
plot(wt, mpg, main="Mileage vs. Car Weight", xlab="weight", ylab="Mileage",
pch=18, col="blue")
text(wt, mpg, row.names(mtcars), cex=0.6, pos=4, col='red')
detach(mtcars)
attach(mtcars)
opar<- par(no.readonly = T)
par(mfrow=c(2, 2))
plot(wt, mpg,main="scatterplot of wt vs. mpg")
plot(wt, disp, main="scatterplot of wt vs. disp")
hist(wt, main="Histgram of wt")
boxplot(wt, main="Boxplot of wt")
par(opar)
detach(mtcars)
attach(mtcars)
opar<-par(no.readonly = T)
par(mfrow=c(3,1 ))
hist(wt)
hist(disp)
hist(mpg)
par(opar)
detach(mtcars)
attach(mtcars)
layout(matrix(c(1,1,2,3), 2, 2, byrow=T))
opar <- par(no.readonly = T)
par(mfrow = c(1,1))
barplot(counts, main='Simple Bar Plot', xlab="Improved", ylab = "Frequence")
barplot(counts, main='Simple Bar Plot', ylab="Improved", xlab = "Frequence", horiz = T)
counts<-table(Arthritis$Improved, Arthritis$Treatment)
plot(Arthritis$Improved)
barplot(counts, main="Stacked Bar Plot", col=c("red", "yellow", "green"), legend = rownames(counts))
barplot(counts, main="Grouped Bar Plot", col=c("red", "yellow", "green"), legend = rownames(counts), beside = T)
states<-data.frame(state.region, state.x77)
means <- aggregate(states$Illiteracy, by=list(state.region), FUN=mean)
means <- means[order(means$x),]
barplot(means$x, names.arg = means$Group.1)
title("Mean Illiteracy Rate")
par(mar = c(5, 8, 4, 2))
par(las=2)
barplot(means$x, names.arg = means$Group.1, cex.names = 0.8, horiz = T)
title("Mean Illiteracy Rate")
attach(Arthritis)
counts<-table(Treatment, Improved)
spine(counts, main = "Spinogram Example")
detach(Arthritis)
attach(Arthritis)
counts<-table(Treatment, Improved)
spine(counts, main = "Spinogram Example")
detach(Arthritis)
library('vcd')
library('Hmisc')
attach(Arthritis)
counts<-table(Treatment, Improved)
spine(counts, main = "Spinogram Example")
detach(Arthritis)
opar<-par(no.readonly = T)
opar<-par(no.readonly = T)
par(mfrow=c(2, 2))
slices = c(10, 12, 4, 16, 8)
lbls<- c("US", "UK", "AUS", "Ger", "France")
pie(slices, labels = lbls, main="Simple Pie Chart")
pct<-round(slices/sum(slices)* 100)
lbls2<-paste(lbls, " ", pct, "%", sep="")
pie(slices, lbls2, col=rainbow(length(slices)))
library(plotrix)
pie3D(slices, labels = lbls, explode = 0.1, labelcex=0.8, main="3D pie chart")
fan.plot(slices, labels = lbls, explode = 0.1, main="fan chart")
par(opar)
par(mfrow=c(2, 2))
hist(mtcars$mpg)
hist(mtcars$mpg, breaks = 12, col="red", xlab="miles per gallon")
rug(jitter(mtcars$mpg))
hist(mtcars$mpg, freq=FALSE, breaks = 12, col="red", xlab="miles per gallon")
lines(density(mtcars$mpg), col="blue", lwd=2)
x<-mtcars$mpg
h<-hist(x, breaks = 12, col="red", xlab="Miles per gallon",
main="Histogram with normal curve and box")
xfit <- seq(min(x), max(x), length=40)
yfit <-dnorm(xfit, mean=mean(x), sd=sd(x))
yfit<- yfit*length(x)
lines(xfit, yfit,col="blue",lwd=2)
box()
par(mfrow=c(2, 1))
d<- density(mtcars$mpg)
plot(d)
polygon(d, col="red", border="blue")
rug(mtcars$mpg, col="brown")
library(sm)
attach(mtcars)
cyl.f<- factor(cyl, levels=c(4,6, 8), labels = c("4 cylinder",
"6 cylinder",
"8 cylinder"))
par(mfrow=c(2, 1))
d<- density(mtcars$mpg)
plot(d)
polygon(d, col="red", border="blue")
rug(mtcars$mpg, col="brown")
library(sm)
par(mfrow=c(2, 1))
d<- density(mtcars$mpg)
plot(d)
par(opar)
par(mfrow=c(2, 2))
hist(mtcars$mpg)
hist(mtcars$mpg, breaks = 12, col="red", xlab="miles per gallon")
rug(jitter(mtcars$mpg))
hist(mtcars$mpg, freq=FALSE, breaks = 12, col="red", xlab="miles per gallon")
lines(density(mtcars$mpg), col="blue", lwd=2)
x<-mtcars$mpg
h<-hist(x, breaks = 12, col="red", xlab="Miles per gallon",
main="Histogram with normal curve and box")
xfit <- seq(min(x), max(x), length=40)
yfit <-dnorm(xfit, mean=mean(x), sd=sd(x))
yfit<- yfit*length(x)
lines(xfit, yfit,col="blue",lwd=2)
box()
par(mfrow=c(2, 1))
d<- density(mtcars$mpg)
plot(d)
polygon(d, col="red", border="blue")
rug(mtcars$mpg, col="brown")
library(sm)
attach(mtcars)
cyl.f<- factor(cyl, levels=c(4,6, 8), labels = c("4 cylinder",
"6 cylinder",
"8 cylinder"))
sm.density.compare(mpg, cyl, xlab="Miles per Gallon")
colfill <- c(2:(1+length(levels(cyl.f))))
legend(locator(1), levels(cyl.f), fill = colfill, cex = 0.3)
detach(mtcars)
par(opar)
boxplot(mtcars$mpg, main="Box plot", ylab="Miles per Gallon")
boxplot.stats(mtcars$mpg)
attach(mtcars)
boxplot(mpg~cyl)
boxplot(mpg~cyl, notch=TRUE,
varwidth=TRUE,
col="red")
cyl.f <- factor(mtcars$cyl, levels = c(4,6, 8), labels=c("4","6","8"))
am.f<- factor(mtcars$am, levels=c(0, 1), labels=c("auto", "standard"))
boxplot(mpg~am.f*cyl.f, data=mtcars, varwidth=T,
col=c("gold", "darkgreen"))
library(vioplot)
x1<-mtcars$mpg[mtcars$cyl == 4]
x2<-mtcars$mpg[mtcars$cyl == 6]
x3<-mtcars$mpg[mtcars$cyl == 8]
vioplot(x1, x2, x3, names=c("4 cyl", "6 cyl", "8 cyl"), col="gold")
dotchart(mtcars$mpg,  labels = row.names(mtcars), cex=0.7)
x<-mtcars[order(mtcars$mpg),]
x$color[x$cyl == 4] <- "red"
x$color[x$cyl == 6] <- "blue"
x$color[x$cyl == 8] <- "darkgreen"
dotchart(x$mpg, color = x$color, groups = x$cyl, labels = row.names(x),
cex=0.7, pch=19)
library(RODBC)
library(xlsx)
data<-read.xlsx("ch1_homework.xls", 1, encoding = "gbk")
names(data) <-paste(c("id", "name", "date", "quality",
"price", "pack_price"), sep=" ")
attach(geyster)
attach(geyser)
library(MASS)
attach(geyser)
hist(waiting)
?dnorm
dnorm(waiting, 3, 4)
waiting
ll<-function(para)
{
f1=dnorm(waiting, para[2], para[3])
f2=dnorm(waiting, para[4], para[5])
f = para[1] * f1 + (1-para[1])* f2
ll = sum(log(f))
return (-ll)
}
geyser.est = nlminb(c(0.5, 50,
10, 80, 10), ll,
lower=c(0.0001, -Inf, 0.0001, -Inf,
0.0001), upper = c(0.9999, Inf, Inf, Inf, Inf))
options(digits=3)
geyser.est$par
x<-seq(40, 120)
f<-p*dnorm(x, mu1, sigma1) + (1 - p) * dnorm(x, mu2, sigma2)
p<-geyser.est$par[1]
mu1<-geyser.est$par[2]
sigma1<-geyser.est$par[3]
mu2<-geyser.est$par[4]
sigma2<-geyser.est$par[5]
x<-seq(40, 120)
f<-p*dnorm(x, mu1, sigma1) + (1 - p) * dnorm(x, mu2, sigma2)
hist(waiting, freq=F)
lines(x, f)
num<-c(rep(0:5, c(1532, 581, 179, 41, 10, 4)))
install.packages("maxLik")
library(maxLik)
para <- maxLik(logLik, start = c(0.5, 0.4))$estimate
num<-c(rep(0:5, c(1532, 581, 179, 41, 10, 4)))
install.packages("maxLik")
logLik<-function(para)
{
f=dnbinorm(num,para[1],1/(1 + para[2]))
ll=sum(log(f))
return(ll)
}
install.packages("maxLik")
library(maxLik)
para <- maxLik(logLik, start = c(0.5, 0.4))$estimate
f=dnbinom(num,para[1],1/(1 + para[2]))
library(maxLik)
para <- maxLik(logLik, start = c(0.5, 0.4))$estimate
logLik<-function(para)
{
f=dnbinom(num,para[1],1/(1 + para[2]))
ll=sum(log(f))
return(ll)
}
library(maxLik)
para <- maxLik(logLik, start = c(0.5, 0.4))$estimate
r <- para[1];
beta<-para[2];
l <-  length(num)
nbinomnum <-  dnbinom(0:5, r, 1/(1 + beta))* l
plot(0:5, nbinomnum, ylim=c(0, 1600))
points(0:5, c(1532, 581, 179, 41, 10, 4))
points(0:5, c(1532, 581, 179, 41, 10, 4), type = 'p', col=2)
legend(3, 1000, legend=c("num, poisson"), col=1: 2, lty=1)
legend(3, 1000, legend=c("num, poisson"), col=1:2, lty=1)
legend(3, 1000, legend=c("num, poisson"), col=1:2, lty=1)
legend(3, 1000, legend=c("num", "poisson"), col=1:2, lty=1)
#MLE
library(MASS)
attach(geyser)
hist(waiting)
ll<-function(para)
{
f1=dnorm(waiting, para[2], para[3])
f2=dnorm(waiting, para[4], para[5])
f = para[1] * f1 + (1-para[1])* f2
ll = sum(log(f))
return (-ll)
}
geyser.est = nlminb(c(0.5, 50,
10, 80, 10), ll,
lower=c(0.0001, -Inf, 0.0001, -Inf,
0.0001), upper = c(0.9999, Inf, Inf, Inf, Inf))
options(digits=3)
geyser.est$par
p<-geyser.est$par[1]
mu1<-geyser.est$par[2]
sigma1<-geyser.est$par[3]
mu2<-geyser.est$par[4]
sigma2<-geyser.est$par[5]
x<-seq(40, 120)
f<-p*dnorm(x, mu1, sigma1) + (1 - p) * dnorm(x, mu2, sigma2)
hist(waiting, freq=F)
lines(x, f)
hist(waiting)
ll<-function(para)
{
f1=dnorm(waiting, para[2], para[3])
f2=dnorm(waiting, para[4], para[5])
f = para[1] * f1 + (1-para[1])* f2
ll = sum(log(f))
return (-ll)
}
geyser.est = nlminb(c(0.5, 50,
10, 80, 10), ll,
lower=c(0.0001, -Inf, 0.0001, -Inf,
0.0001), upper = c(0.9999, Inf, Inf, Inf, Inf))
options(digits=3)
geyser.est$par
p<-geyser.est$par[1]
mu1<-geyser.est$par[2]
sigma1<-geyser.est$par[3]
mu2<-geyser.est$par[4]
sigma2<-geyser.est$par[5]
x<-seq(40, 120)
f<-p*dnorm(x, mu1, sigma1) + (1 - p) * dnorm(x, mu2, sigma2)
hist(waiting, freq=F)
lines(x, f)
csv =  read.csv("train.csv", header = T, sep='\t', stringsAsFactors = F, encoding = 'UTF-8')
mystopwords <- unlist(read.table("StopWords.txt", stringsAsFactors = F))
library(NLP)
library(tm)
library(Rwordseg)
removeNumbers = function(x) {ret = gsub("[0-9０１２３４５６７８９]", "", x)}
removeStopWords = function(x, words) {
ret = character(0)
index <- 1
it_max <- length(x)
while (index <= it_max) {
if (length(words[words == x[index]]) < 1)ret <- c(ret, x[index])
index <= index + 1
}
ret
}
sample.words <- lapply(csv$text, removeNumbers)
sample.words <- lapply(sample.words, segmentCN)
sample.words <- lapply(sample.words, removeStopWords, mystopwords)
csv =  read.csv("train.csv", header = T, sep='\t', stringsAsFactors = F, encoding = 'UTF-8')
setwd("~/")
setwd("~/Workspace/bigDataTutorial")
csv =  read.csv("train.csv", header = T, sep='\t', stringsAsFactors = F, encoding = 'UTF-8')
mystopwords <- unlist(read.table("StopWords.txt", stringsAsFactors = F))
library(NLP)
library(tm)
library(Rwordseg)
removeNumbers = function(x) {ret = gsub("[0-9０１２３４５６７８９]", "", x)}
removeStopWords = function(x, words) {
ret = character(0)
index <- 1
it_max <- length(x)
while (index <= it_max) {
if (length(words[words == x[index]]) < 1)ret <- c(ret, x[index])
index <= index + 1
}
ret
}
sample.words <- lapply(csv$text, removeNumbers)
sample.words <- lapply(sample.words, segmentCN)
sample.words <- lapply(sample.words, removeStopWords, mystopwords)
